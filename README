URingPaxos : A high throughput atomic multicast protocol
--------------------------------------------------------

To build:
mvn -DskipTests package (tests assume a local Zookeeper instance)

To deploy/run:
Use the tar file in target/Paxos-1.0.tar.gz
it includes all config files and start scripts

To work in eclipse:
mvn eclipse:eclipse -DdownloadSources -DdownloadJavadocs


Paxos (IP multicast)
---------------------------
The project specific config is in: paxos.conf

The implementation specific config is in
lib/paxos.properties

The start scripts are acceptor.sh/learner.sh/proposer.sh


Ring Paxos / Multi-Ring Paxos (Unicast TCP)
---------------------------
You need no configuration files; everything is on zookeeper!

Start a Node with "ringpaxos.sh 1,1:PAL [zookeeper.host:port]" 
     (ringID,nodeID:roles;ringID,nodeID:roles;...)

Environment Config
----------------
$IFACE: prefer a specific inerface (e.g. "eth0")
$IP: bind to this IP 
$EC2: publish this IP in Zookeeper (e.g. EC2 public IP)
use java.net.preferIPv6Stack=true to prefer IPv6

Zookeeper Config
----------------
p1_preexecution_number: Phase 1 pre exceution (5000)
p1_resend_time: Phase 1 message resend time (1000ms)
value_resend_time: Proposer timeout (3000ms)
value_batch_size: Batch size at the proposers (0: disabled) 
  !! Every batch is decided in a single Paxos instance. Be careful with SMR !!
learner_recovery: A starting learner recovers from instance 1 (1: enabled)
quorum_size: Quroum of acceptors whic hmust be alive (2)
stable_storage: Stable storage implementation at the acceptors:
  ch.usi.da.paxos.storage.BufferArray (default: allocates 940 Mbytes!)
  ch.usi.da.paxos.storage.CyclicArray (requires JNI)
  ch.usi.da.paxos.storage.BerkeleyStorage (/tmp or env(DB))
  ch.usi.da.paxos.storage.SyncBerkeleyStorage (/tmp or env(DB))
  ch.usi.da.paxos.storage.InMemory
  ch.usi.da.paxos.storage.MemcachedStorage
  ch.usi.da.paxos.storage.NoStorage
  You can specify everything which implements ch.usi.da.paxos.api.StableStorage.
trim_quorum: Quroum for the acceptor log trimming (2) 
trim_modulo: Every n instance the coordinator checkes if it is possible to trim 
  the acceptor logs (0: disabled)

value_size: Value size for the in-system benchmark (32768)
value_count: How many values to send after typing "start" (900000)
concurrent_values: How many undecided values are allowed (20)

buffer_size: TCP buffer size (2097152)
tcp_crc: Additional CRC32 of the TCP framing / serialization (0)
tcp_nodelay: TCP no delay (1)

multi_ring_lambda: Multi Ring Paxos lambda, set 1.5 of the maximum expected 
  decisions per second. 0: disabled (9000)
multi_ring_delta_t: Delta t between the coordinator samples the ring throughput 
  in (100ms). Hint: Set it as high a possible but smaller than your application
  latency. E.g. EC2 SMR: from cmd send until the replica replies = 80 ms. Choose
  a delta_t below 80 ms. Do not set it too low: Without traffic in the ring you 
  will require one Paxos instance per every delta_t!
multi_ring_m: How many round-robin messages per ring (1) 
multi_ring_start_time: The virtual start time every coordinator agrees on. Set:
  echo "set /ringpaxos/config/multi_ring_start_time `date +%s`000" | zkCli.sh
  before you run the code.
deliver_skip_messages: Expose the skip messages to the application. (0)
  Enable this for SMR; so the replica see's all Paxos instances.

Output Control (log4j)
----------------
ch.usi.da.paxos.Stats:
  >error to enable 5s throughput statistics
ch.usi.da.paxos.message.Value:
  error/info/debug to print out decided values
ch.usi.da.paxos.storage.Proposal:
  error/info/debug to print out proposals

Ring Paxos with Thrift Interface
---------------------------
Like "ringpaxos.sh"; but "thriftnode.sh"


Packages Overview
---------------------------
ch.usi.da.paxos
ch.usi.da.paxos.api
	Where you want to start as developer
	
ch.usi.da.paxos.old
	Simple Paxos Impl. (IP Multicast)
	
ch.usi.da.paxos.lab
	Different classes for testing purpose
	
ch.usi.da.paxos.messages
	The internal message format for all Paxos Impl.
	
ch.usi.da.paxos.ring
	The Ring Paxos (Multi-Ring Paxos) Impl.
	
ch.usi.da.paxos.storage
	Storage Impl. (mainly for RingPaxos)

ch.usi.da.paxos.thrift
	Ring Paxos with thrift server for proposer/learner


---------------------------
Copyright (c) 2013-14 Universit√† della Svizzera italiana (USI)
